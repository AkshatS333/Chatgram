- in this we will learn how render messages to the browser window

- we will do this with the help of mustache templating library

1. first we move in index.html to have new script tag to load the new library
2. we take the script tag with library from following link
   links.mead.io/chatlibs
   or 
   https://gist.github.com/andrewjmead/3e3e310aea27f10f7f1ce506b39dfcbe
3. copy all the script tages and paste them in index.html above socket.io
4. now we will define a template in index.html and so we can render it as many times as we can
   this is template is for individual message
   we render these templates with help of mustache library
5. to create a place to render templates we create a div with id="messages"
6. in chat js we will render the templates in very first socket.on
   1. for this we need to get two things. first is template and second is place to render template
   2. so we store them in constant

7. Mustache.render will return the final html to be rendered
8. then $messages.insertAdjacentHTML allows to adjust html elements adjacent to selected html element
   so in this case the messages div
   
   1. first argument is 
        1. afterbegin - so after the message div start, so new message appears at top
        2. afterend - after div end. so not inside the div
        3. beforebegin - before div starts, also not inside div
        4. beforeend - before div ends. so new message shown at bottom
    
    2. we will select beforeend

9. till now hardcoded content is coming ie This is a message

10. for dynamic rendering we replace content of p with {{message}} in index.html. and in chat.js
    in Mustache.render we pass second argument ie the data to be passed as an object



****chat.js

const socket=io()  // io return value stored in socket

// Elements
const $messageForm= document.querySelector('#msgForm')
const $messageFormInput= $messageForm.querySelector('input')
const $messageFormButton = document.querySelector('button')
const $sendLocationButton = document.querySelector('#send-location')
const $messages = document.querySelector('#messages')

// Templates
const messageTemplate =  document.querySelector('#message-template').innerHTML

socket.on('serverMsg', (message)=>{
    console.log('Message received is ', message)

    const html= Mustache.render(messageTemplate,{
        message:message
    })
    $messages.insertAdjacentHTML('beforeend',html)
})


document.querySelector('#msgForm').addEventListener('submit',(e)=>{
    e.preventDefault()

    $messageFormButton.setAttribute('disabled', 'disabled')

    const userMsg=e.target.elements.msgInput.value

    socket.emit('clientMsg',userMsg ,(error)=>{
        //enable
        $messageFormButton.removeAttribute('disabled')
        $messageFormInput.value=''
        $messageFormInput.focus()
        if(error){
           return  console.log(error)
        }

        console.log('Message Delivered')
    })
})


$sendLocationButton.addEventListener('click',  ()=>{
    if(!navigator.geolocation){
        return alert('Geolocation is not supported by your browser')
    }

    // Disable
    $sendLocationButton.setAttribute('disabled','disabled')

    navigator.geolocation.getCurrentPosition((position)=>{
        socket.emit('sendLocation',{
            latitude: position.coords.latitude,
            longitude: position.coords.longitude
        },()=>{
            $sendLocationButton.removeAttribute('disabled')
            console.log('Location Shared!')
        })
    })
})




****index.html

<!DOCTYPE html>

<html>
    <head>

    </head>
    <body>
        Chat App

        <div id="messages"></div>

        <form id="msgForm" >
            <input type="text" name="msgInput" placeholder="Message" >
            <button >Submit</button>
        </form>
        <button id="send-location">Send location</button>

        <!-- type signifies what content is there inside the scripts -->
        <script id="message-template" type="text/html"> 
            <div>
                <p>{{message}</p>
            </div>
        </script>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/mustache.js/3.0.1/mustache.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.6.0/qs.min.js"></script>
        <script src="/socket.io/socket.io.js"></script>
        <!-- this is client side version of the library and when we load this in our client side js code will have access to all stuffs of the library it needs in order to setup communication -->
        <script src="/js/chat.js"></script>
    </body>
</html>
